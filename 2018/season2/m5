1.vue－router延迟加载部分模块
    ［index.js］原写法：
    
    import a from '@/pages/a'
    routes: [
    {
      path: '/wechat-oauth',
      name: 'wechatoauth',
      meta: {
        title: '企业微信认证'
      },
      component: a
    }

    新写法：
    component: function (resolve) {
        require(['@/pages/a'], resolve)
      }

---------------------------------------------------------------------------------------------
2.badjs-report用法（https://github.com/BetterJS/badjs-report）
    ［main.js]写法：

    import BJ_REPORT from 'badjs-report'

    // 初始化
    BJ_REPORT.init({
        id: 1, // 上报 id, 不指定 id 将不上报
        uin: localStorage.YHSP_USER_NUMBER + '-' + localStorage.YHSP_USER_NAME, // 指定用户 id, (默认已经读取 qq uin)
        delay: 1000, // 当 combo 为 true 可用，延迟多少毫秒，合并缓冲区中的上报（默认）
        url: 'https://t.my.com/badjs', // 指定上报地址
        ignore: [/Script error/i], // 忽略某个错误
        random: 1, // 抽样上报，1~0 之间数值，1为100%上报（默认 1）
        repeat: 5, // 重复上报次数(对于同一个错误超过多少次不上报)
        // 避免出现单个用户同一错误上报过多的情况
        onReport: function (id, errObj) {}, // 当上报的时候回调。 id: 上报的 id, errObj: 错误的对象
        submit: null, // 覆盖原来的上报方式，可以自行修改为 post 上报等
        ext: {}, // 扩展属性，后端做扩展处理属性。例如：存在 msid 就会分发到 monitor,
        offlineLog: false, // 是否启离线日志 [默认 false]
        offlineLogExp: 5 // 离线有效时间，默认最近5天
    })
    
    //在具体的组件里
    import axios from 'axios'
    import BJ_REPORT from 'badjs-report'

    //此处结合axios和.then()两个知识点,在项目中是用Vue.http.get和Vue.http.post,这种是vue自带axios的方法
    export default {
        getdayPriceF7 (marketId, materialId, deliveryDate, number) {
            return axios.get(BaseApi.GETDAYPRICEF7, {
            params: {
                t: Vue.prototype.accessToken,
                marketId: marketId,
                materialId: materialId,
                deliveryDate: deliveryDate,
                number: number || 0
            }
            }).then(function (response) {}, function () {
                BJ_REPORT.report('Basejs Fail to getdayPriceF7 , marketId =' + marketId + ', materialId =' + materialId + ', deliveryDate =' + deliveryDate + ', number =' + number)
            })
        }
    ｝
---------------------------------------------------------------------------------------------
3.最简单的.vue模版导出为npm包方法：见附件vue-wx-image，3个文件即可
    xxx.vue 
    index.js  
    package.json

---------------------------------------------------------------------------------------------

4.vue路由的数据推入与读出
    推入:
    pushRoute () {
        this.$router.push({
          path: '/wfmap',
          query: {billId: this.$route.query.billId}
        })
      }
    }
    读出：
    readRoute () {
      // console.log(this.$route.query.billId)
      this.billId = this.$route.query.billId
    }

---------------------------------------------------------------------------------------------

5.Object内容本身是无序的，不能像数组一样靠[1]来获取，我采取的处理方法是另外建立数组作为目录：
    let myarr = []
    for (let value in this.tipsMap) {
        myarr.push(value)
    }
    然后根据myarr[1]取到key名，再去object[key]这样查询


