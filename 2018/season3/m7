1.vuex使用
    基于states\fetter\mutation\action\和 modules的vue项目管理管理状态插件
---------------------------------------------------------------------------------------------
2.字符串存object key值，以后取用最好用obj[key],但仅限于取这一个子层级的值，
    所以我们引入字符串转json的一些方法
    https://segmentfault.com/a/1190000007368846
    相信大部分人都知道或者去百度检索都会得到将js中的字符串转化成json对象常见的3种方法

举例：

var str = '{"name":"小明","age":18}';

将字符串转化json对象：

var json = JSON.parse(str);
var json = eval("(" + str + ")");
var json = (new Function("return " + str))();
通过console.log()将json打印到控制台，不管是使用以上3种哪一种方法，都能在chrome控制台看到成功转化的结果：


https://blog.csdn.net/YouZi_X/article/details/80393254

在jsint中使用eval()解析json字符串转换成对象数组时，出现报错的情况，一般可以忽略。

强迫症者可以使用如下JavaScript方法解决。

//计算表达式的值
function evil(fn) {
    var Fn = Function;  //一个变量指向Function，防止有些前端编译工具报错
    return new Fn('return ' + fn)();
}
原文：https://blog.csdn.net/xundh/article/details/4
var data = eval("(" + jsondata + ")");
// 使用
var data = evil(jsondata)

---------------------------------------------------------------------------------------------
webpack的坑，在assets里声明通用js时，由于之后编译打包路径会改变，所以不能直接使用静态路径，
要靠import来动态绑定路径：

import ICONBACK_URL from '../img/icon_nav_back.png'
import ICONADD_URL from '../img/icon_nav_add.png'

export const ButtonList = { // 按钮声明与函数传入接口
  addEntry: {iconUrl: ICONCELL_URL, name: '添加分录', msg: ''}, // 这行会成功
  back: {iconUrl: '../img/icon_nav_back.png', name: '返回', msg: ''} // 这行会报错
}

---------------------------------------------------------------------------------------------
object深拷贝
开发自己的模版时遇到这个问题，obj1=obj2这种简单粗暴的复制方法，因为只是指向同一个内存地址，
所以只要一方改变另一方也会改变，

第一次尝试的解决方法是myObj = Object.assign(obj1, obj2)，也属于浅拷贝，
但能实现一层子层级的拷贝
/* entry! */
      entry_resetInit () {
        this.settlement.entryReset = Object.assign({}, this.settlement.entryEdit)
        this.bonus.entryReset = Object.assign({}, this.bonus.entryEdit)
        this.charge.entryReset = Object.assign({}, this.charge.entryEdit)
        console.log(this.settlement.entryReset)
      },

然后因为要拷贝的都是json数据，没有函数内容，所以可以放心大胆的用这个深拷贝方法
/* entry! */
      entry_resetInit () {
        this.settlement.entryReset = JSON.parse(JSON.stringify(this.settlement.entryEdit))
        this.bonus.entryReset = JSON.parse(JSON.stringify(this.bonus.entryEdit))
        this.charge.entryReset = JSON.parse(JSON.stringify(this.charge.entryEdit))
      },











